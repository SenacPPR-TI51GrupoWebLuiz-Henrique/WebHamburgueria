@model WebHamburgueria.ViewModels.LoginViewModel

@{
    ViewBag.Title = "Login - Code & C#eese Web";
    Layout = null;
}

<!DOCTYPE html>
<html>
<head>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">

    <!-- Script Inline para definir o tema imediatamente -->
    <script>
        (function () {
            const storedTheme = localStorage.getItem('theme');
            let theme = 'light';
            if (storedTheme === 'dark' || (storedTheme === 'auto' && window.matchMedia('(prefers-color-scheme: dark)').matches)) {
                theme = 'dark';
            }
            document.documentElement.setAttribute('data-bs-theme', theme);
        })();
    </script>

    <title>@ViewBag.Title</title>

    <!-- Link do CSS do Bootstrap ou Bootswatch -->
    @Styles.Render("~/Content/zephyr")
    @Scripts.Render("~/bundles/modernizr")
    <link href="~/Content/bootswatch/zephyr/bootstrap.min.css" rel="stylesheet" />
    <link href="~/Content/custom/custom.css" rel="stylesheet" />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css">
</head>
<body class="d-flex flex-column min-vh-100">
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
    <section>
        <div class="container d-flex justify-content-center align-items-center" style="padding-top: 4em; padding-bottom: 1em;">
            <div class="card shadow-lg" style="border-radius: 1rem;">
                <div class="card-body p-5">
                    <h3 class="card-title text-center mb-4">Admin Login</h3>
                    @using (Html.BeginForm("Login", "Account", FormMethod.Post))
                    {
                        <div class="mb-3">
                            @Html.LabelFor(model => model.Login, new { @class = "form-label" })
                            @Html.TextBoxFor(model => model.Login, new { @class = "form-control", placeholder = "Digite seu login" })
                            @Html.ValidationMessageFor(model => model.Login, "", new { @class = "text-danger" })
                        </div>
                        <div class="mb-3">
                            @Html.LabelFor(model => model.Password, new { @class = "form-label" })
                            @Html.PasswordFor(model => model.Password, new { @class = "form-control", placeholder = "Digite sua senha" })
                            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                        </div>
                        <div class="d-grid">
                            <button type="submit" class="btn btn-primary">Entrar</button>
                        </div>
                    }
                </div>
            </div>
        </div>
    </section>
        <footer class="mt-auto bg-body text-body" style="min-height: 5em;">
            <div class="container">
                <div class="row">
                    <!-- Créditos e Direitos -->
                    <div class="col-md-6 mb-3 mb-md-0">
                        <br />
                        <p class="mb-1">
                            Feito por
                            <a href="https://github.com/Lu1zH3nr1qu3DA" target="_blank" class="text-decoration-underline">Luiz H. D. Alecrim</a>
                            e
                            <a href="https://www.instagram.com/ricksf3?igsh=ZHlwdWdkYTExeGgx" target="_blank" class="text-decoration-underline">Henrique de Souza Fontes</a>.
                        </p>
                        <h3>
                            <a href="https://github.com/SenacPPR-TI51GrupoWebLuiz-Henrique/WebHamburgueria" target="_blank" class="github-icon">
                                <i class="bi bi-github"></i>
                            </a>
                        </h3>
                        <p class="mb-0">&copy; @DateTime.Now.Year. Todos os direitos reservados.</p>
                        <br />
                    </div>
                </div>
            </div>
        </footer>

        <script>
            document.addEventListener('DOMContentLoaded', function () {
                // Define ou atualiza o tema
                function setTheme(theme) {
                    document.documentElement.setAttribute('data-bs-theme', theme);
                    localStorage.setItem('theme', theme);
                }

                // Define o tema como "auto" (verifica o prefers-color-scheme)
                function setThemeAuto() {
                    localStorage.setItem('theme', 'auto');
                    if (window.matchMedia('(prefers-color-scheme: dark)').matches) {
                        document.documentElement.setAttribute('data-bs-theme', 'dark');
                    } else {
                        document.documentElement.setAttribute('data-bs-theme', 'light');
                    }
                }

                // Escuta mudanças do sistema para atualizar quando está em "auto"
                window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', () => {
                    if (localStorage.getItem('theme') === 'auto') {
                        setThemeAuto();
                    }
                });

                // Carrega a preferência salva ou define "auto" por padrão
                const storedTheme = localStorage.getItem('theme');
                if (storedTheme === 'dark') {
                    setTheme('dark');
                } else if (storedTheme === 'light') {
                    setTheme('light');
                } else if (storedTheme === 'auto') {
                    setThemeAuto();
                } else {
                    // Se não houver nada salvo, podemos defaultar para auto
                    setThemeAuto();
                }

                // Lida com o clique nos botões do dropdown
                document.querySelectorAll('[data-bs-theme-value]').forEach(button => {
                    button.addEventListener('click', function () {
                        const value = this.getAttribute('data-bs-theme-value');
                        if (value === 'auto') {
                            setThemeAuto();
                        } else {
                            setTheme(value);
                        }

                        // Atualiza o aria-pressed para acessibilidade
                        document.querySelectorAll('[data-bs-theme-value]').forEach(btn => {
                            btn.setAttribute('aria-pressed', btn.getAttribute('data-bs-theme-value') === value ? 'true' : 'false');
                        });
                    });
                });
            });
        </script>
    }
    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
        @Scripts.Render("~/bundles/jquery")
        <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    }
</body>
</html>